#!/bin/bash

echo "üîç V√âRIFICATION INT√âGRATION SONARQUBE"
echo "===================================="

echo ""
echo "üìä 1. V√©rification SonarQube Web Interface..."
echo "   ‚Üí Ouvrez: http://localhost:9000"
echo "   ‚Üí Login: admin / admin"
echo "   ‚Üí Recherchez le projet 'student-management'"
echo ""

echo "‚úÖ SIGNES D'INT√âGRATION R√âUSSIE:"
echo "   - Projet 'student-management' visible dans la liste"
echo "   - Derni√®re analyse avec timestamp r√©cent"
echo "   - M√©triques affich√©es (Bugs, Vulnerabilities, Code Smells)"
echo "   - Quality Gate status (PASSED/FAILED)"
echo ""

echo "‚ùå SIGNES D'√âCHEC:"
echo "   - Aucun projet 'student-management'"
echo "   - Derni√®re analyse tr√®s ancienne"
echo "   - Message d'erreur sur la page projet"
echo ""

# Test API SonarQube
echo "üß™ 2. Test API SonarQube..."
RESPONSE=$(curl -s -u admin:admin "http://localhost:9000/api/projects/search?projects=student-management")

if echo "$RESPONSE" | grep -q "student-management"; then
    echo "‚úÖ Projet trouv√© via API SonarQube"
    
    # R√©cup√©rer les m√©triques
    METRICS=$(curl -s -u admin:admin "http://localhost:9000/api/measures/component?component=student-management&metricKeys=bugs,vulnerabilities,code_smells,coverage,ncloc")
    
    if echo "$METRICS" | grep -q "bugs"; then
        echo "‚úÖ M√©triques disponibles via API"
        echo "üìä D√©tails des m√©triques:"
        echo "$METRICS" | python3 -m json.tool 2>/dev/null || echo "$METRICS"
    else
        echo "‚ö†Ô∏è Projet trouv√© mais m√©triques manquantes"
    fi
else
    echo "‚ùå Projet NON trouv√© via API"
    echo "Response: $RESPONSE"
fi