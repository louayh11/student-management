#!/bin/bash

echo "üß™ TEST SONARQUBE LOCAL"
echo "======================"

# V√©rifier SonarQube
echo "üìä 1. V√©rification SonarQube..."
SONAR_STATUS=$(curl -s http://localhost:9000/api/system/status | grep -o '"status":"[^"]*"' | cut -d'"' -f4)

if [ "$SONAR_STATUS" = "UP" ]; then
    echo "‚úÖ SonarQube op√©rationnel"
else
    echo "‚ùå SonarQube non accessible"
    exit 1
fi

# Aller dans le r√©pertoire du projet
echo ""
echo "üìÅ 2. Navigation vers le projet..."
PROJECT_DIR=$(find /home -name "student-management" -type d 2>/dev/null | head -1)

if [ -z "$PROJECT_DIR" ]; then
    echo "‚ùå R√©pertoire student-management non trouv√©"
    echo "üí° Naviguez manuellement vers votre projet et ex√©cutez:"
    echo "   mvn clean compile sonar:sonar -Dsonar.projectKey=student-management -Dsonar.host.url=http://localhost:9000 -Dsonar.login=squ_1363364553b90b454d114a30fce94ead1548e5da"
    exit 1
fi

echo "‚úÖ Projet trouv√©: $PROJECT_DIR"
cd "$PROJECT_DIR"

# V√©rifier pom.xml
if [ ! -f "pom.xml" ]; then
    echo "‚ùå pom.xml non trouv√© dans $PROJECT_DIR"
    exit 1
fi

echo "‚úÖ pom.xml trouv√©"

# Lancer l'analyse SonarQube
echo ""
echo "üîç 3. Lancement analyse SonarQube..."
mvn clean compile sonar:sonar \
    -Dsonar.projectKey=student-management \
    -Dsonar.projectName="Student Management System" \
    -Dsonar.host.url=http://localhost:9000 \
    -Dsonar.login=squ_1363364553b90b454d114a30fce94ead1548e5da \
    -Dsonar.sources=src/main/java \
    -Dsonar.tests=src/test/java \
    -Dsonar.java.binaries=target/classes

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ ANALYSE SONARQUBE R√âUSSIE!"
    echo "üìä Consultez les r√©sultats: http://localhost:9000"
    echo "üîç Projet: student-management"
else
    echo ""
    echo "‚ùå √âchec de l'analyse SonarQube"
    exit 1
fi